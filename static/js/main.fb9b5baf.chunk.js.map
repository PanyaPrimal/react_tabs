{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","useState","find","tab","id","selectedTab","setSelectedTab","className","map","href","onClick","handleTabClick","title","content","App","setSelectedTabId","ReactDOM","render","document","getElementById"],"mappings":"iMAcaA,EAA4B,SAAC,GAEpC,IADFC,EACC,EADDA,KAAMC,EACL,EADKA,cAAeC,EACpB,EADoBA,cAEvB,EAAsCC,oBAAc,WAGlD,OAFmBH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,MAE1BD,EAAK,MAH5B,mBAAOO,EAAP,KAAoBC,EAApB,KAaA,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKC,UAAU,gBAAf,SACE,6BACGT,EAAKU,KAAI,SAAAL,GAAG,OACX,oBAEEI,UAAWJ,EAAIC,KAAOC,EAAYD,GAAK,YAAc,GACrD,UAAQ,MAHV,SAKE,mBACEK,KAAI,WAAMN,EAAIC,IACdM,QAAS,kBAnBA,SAACP,GAClBA,EAAIC,KAAOC,EAAYD,KACzBE,EAAeH,GACfH,EAAcG,IAgBWQ,CAAeR,IAC9B,UAAQ,UAHV,SAKGA,EAAIS,SATFT,EAAIC,WAgBjB,qBAAKG,UAAU,QAAQ,UAAQ,aAA/B,SACGF,EAAYQ,cCzCRf,EAAc,CACzB,CAAEM,GAAI,QAASQ,MAAO,QAASC,QAAS,eACxC,CAAET,GAAI,QAASQ,MAAO,QAASC,QAAS,eACxC,CAAET,GAAI,QAASQ,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAAO,IAAD,EACjC,EAA0Cb,mBAASH,EAAK,GAAGM,IAA3D,mBAAOL,EAAP,KAAsBgB,EAAtB,KAMA,OACE,sBAAKR,UAAU,UAAf,UACE,qBAAIA,UAAU,QAAd,UACG,mBADH,UAEGT,EAAKI,MAAK,SAACC,GAAD,OAASA,EAAIC,KAAOL,YAFjC,aAEG,EAA8Ca,SAEjD,cAAC,EAAD,CACEd,KAAMA,EACNC,cAAeA,EACfC,cAboB,SAACG,GACzBY,EAAiBZ,EAAIC,WCnBzBY,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.fb9b5baf.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\ninterface Tab {\n  id: string;\n  title: string;\n  content: string;\n}\n\ninterface TabsProps {\n  tabs: Tab[];\n  selectedTabId: string;\n  onTabSelected: (tab: Tab) => void;\n}\n\nexport const Tabs: React.FC<TabsProps> = (\n  { tabs, selectedTabId, onTabSelected },\n) => {\n  const [selectedTab, setSelectedTab] = useState<Tab>(() => {\n    const initialTab = tabs.find(tab => tab.id === selectedTabId);\n\n    return initialTab || tabs[0];\n  });\n\n  const handleTabClick = (tab: Tab) => {\n    if (tab.id !== selectedTab.id) {\n      setSelectedTab(tab);\n      onTabSelected(tab);\n    }\n  };\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              key={tab.id}\n              className={tab.id === selectedTab.id ? 'is-active' : ''}\n              data-cy=\"Tab\"\n            >\n              <a\n                href={`#${tab.id}`}\n                onClick={() => handleTabClick(tab)}\n                data-cy=\"TabLink\"\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\n\ninterface Tab {\n  id: string;\n  title: string;\n  content: string;\n}\n\nexport const tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n\n  const handleTabSelected = (tab: Tab) => {\n    setSelectedTabId(tab.id);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {'Selected tab is '}\n        {tabs.find((tab) => tab.id === selectedTabId)?.title}\n      </h1>\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={handleTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}